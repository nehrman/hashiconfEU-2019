apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    app: fruits-catalog
    group: com.github.lbroudoux.msa
    provider: fabric8
    version: 1.0.0-SNAPSHOT
  name: fruits-catalog
spec:
  replicas: 1
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      app: fruits-catalog
      group: com.github.lbroudoux.msa
      provider: fabric8
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: fruits-catalog
        group: com.github.lbroudoux.msa
        provider: fabric8
        version: 1.0.0-SNAPSHOT
    spec:
      initContainers:
      - name: vault-init
        image: quay.io/lbroudoux/ubi8:latest
        command:
          - "sh"
          - "-c"
          - >
            MINIKUBE_TOKEN=$(cat /var/run/secrets/kubernetes.io/serviceaccount/token);
            curl -k --request POST --data '{"jwt": "'"$MINIKUBE_TOKEN"'", "role": "fruits-catalog"}' http://192.168.94.141:8200/v1/auth/minikube/login | jq -j '.auth.client_token' > /etc/vault/token;
            X_VAULT_TOKEN=$(cat /etc/vault/token);
            curl -k --header "X-Vault-Token: $X_VAULT_TOKEN" http://192.168.94.141:8200/v1/kv/fruits-catalog-mongodb > /etc/app/creds.json;
            echo "spring.data.mongodb.uri=mongodb://$(jq -j '.data.user' /etc/app/creds.json):$(jq -j '.data.password' /etc/app/creds.json)@mongodb/sampledb" > /etc/app/application.properties;
            cp /etc/app/application.properties /deployments/config/application.properties
        volumeMounts:
        - name: app-creds
          mountPath: /etc/app
        - name: vault-token
          mountPath: /etc/vault
        - name: app-config
          mountPath: /deployments/config 
      containers:
      - env:
        - name: KEYCLOAK_URL
          value: https://keycloak.testlab.local/auth
        - name: KUBERNETES_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        image: msa/fruits-catalog:latest
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /actuator/health
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 15
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 3
        name: spring-boot
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        - containerPort: 9779
          name: prometheus
          protocol: TCP
        - containerPort: 8778
          name: jolokia
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /actuator/health
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 15
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 3
        resources:
          limits:
            cpu: "1"
            memory: 256Mi
          requests:
            cpu: 200m
            memory: 256Mi
        volumeMounts:
          - name: app-creds
            mountPath: /etc/app
          - name: vault-token
            mountPath: /etc/vault
          - name: app-config
            mountPath: /deployments/config
        securityContext:
          privileged: false
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      serviceAccount: vault-auth
      serviceAccountName: vault-auth
      volumes:
      - name: app-creds
        emptyDir: {}
      - name: app-config
        emptyDir: {}
      - name: vault-token
        emptyDir: {}
      securityContext: {}
      terminationGracePeriodSeconds: 30
